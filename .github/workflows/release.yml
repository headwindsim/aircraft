name: release
on:
  push:
    tags:
      - 'v*'
      - '!v*-alpha*'
      - '!v*-beta*'
      - '!v*-rc*'

jobs:
  create_github_release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  build-a339x:
    needs: create_github_release
    runs-on: ubuntu-latest
    env:
      HDW_PRODUCTION_BUILD: 1
      STANDALONE_ZIP_NAME: headwindsim-aircraft-a330-900-release.7z
      BUILD_DIR_NAME: release-a339x
      CLOUDFLARE_WORKER_PASSWORD: ${{ secrets.CLOUDFLARE_WORKER_PASSWORD }}
      CDN_BUCKET_DESTINATION: addons/a339x/release
      AIRCRAFT_PROJECT_PREFIX: a339x
      AIRCRAFT_VARIANT: a330-941
    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v4.1
        with:
          remove-android: 'true'
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-large-packages: 'true'
          remove-cached-tools: 'true'
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: true
      - name: Set BUILT_DATE_TIME
        run: echo "BUILT_DATE_TIME=$(date -u -Iseconds)" >> $GITHUB_ENV
      - name: Create .env file
        run: |
          echo HDW_PRODUCTION_BUILD=1 >> hdw-a339x/.env
          echo CLIENT_ID=\"${{ secrets.NAVIGRAPH_CLIENT_ID }}\" >> hdw-a339x/.env
          echo CLIENT_SECRET=\"${{ secrets.NAVIGRAPH_CLIENT_SECRET }}\" >> hdw-a339x/.env
          echo SENTRY_DSN=\"${{ secrets.SENTRY_DSN }}\" >> hdw-a339x/.env
          echo AIRCRAFT_PROJECT_PREFIX=${{ env.AIRCRAFT_PROJECT_PREFIX }} >> hdw-a339x/.env
          echo AIRCRAFT_VARIANT=${{ env.AIRCRAFT_VARIANT }} >> hdw-a339x/.env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
          echo LOCALAZY_READ_KEY=${{ secrets.LOCALAZY_READ_KEY }} >> .env
          echo VITE_BUILD=false >> .env
      - name: Setup Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/setup.sh --clean
      - name: Copy Sources
        run: |
          ./scripts/dev-env/run.sh ./scripts/copy_a339x.sh
      - name: Build A339X Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/build_a339x.sh --no-tty -j 4
          docker system prune -af
      - name: Build Fragmenter modules
        run: |
          node ./scripts/fragment-a339x.js
          cp ./build-a339x/out/build-modules/modules.json ./build-a339x/out/headwindsim-aircraft-a330-900/install.json
          node ./scripts/install-source-a339x.js
      - name: Upload to CloudFlare CDN
        run: |
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a339x/out/build-modules
      - name: Build Standalone Download files
        run: |
          mkdir ./${{ env.BUILD_DIR_NAME }}
          cd ./build-a339x/out/
          rm -rf build-modules
          7z a -t7z -m0=lzma2 -mx=7 -v2047m ../../${{ env.BUILD_DIR_NAME }}/${{ env.STANDALONE_ZIP_NAME }} ./headwindsim-aircraft-a330-900/
          cd ../../
          if [ "$(ls -1 ./${{ env.BUILD_DIR_NAME }} | wc -l)" -eq 1 ]; then
            mv ./${{ env.BUILD_DIR_NAME }}/${{ env.STANDALONE_ZIP_NAME }}.001 ./${{ env.BUILD_DIR_NAME }}/${{ env.STANDALONE_ZIP_NAME }} # Only applicable if split in 1 part!
          fi
          df -h
      - name: Upload release assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          release_id: ${{ needs.create_github_release.outputs.id }}
          assets_path: ./${{ env.BUILD_DIR_NAME }}/